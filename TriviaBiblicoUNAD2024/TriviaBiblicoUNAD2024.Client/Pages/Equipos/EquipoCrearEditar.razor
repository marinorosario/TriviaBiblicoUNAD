@page "/equipo-crear"
@page "/{IdEquipo:int}/equipo-editar"
@using SNashENGINE.Share.DTOs.Archivos
@using SNashENGINE.Share.DTOs.Equipo
@using System.Net.Http.Headers
@inject HttpClient Http
@inject NavigationManager Navi
@inject ILogger<EquipoCrearEditar> Logger

@attribute [StreamRendering]
@rendermode InteractiveAuto

<PageTitle>@TituloText</PageTitle>

<h4>@TituloText</h4>
<EditForm EditContext="CntxtCrearEquipoForm" FormName="CrearEquipoForm" OnValidSubmit="AlCrearForm">
    <div class="form-floating mb-3">
        <InputText @bind-Value="EquipoInsertDto.Nombre" class="form-control" id="NombreEquipo" placeholder="Nombre del Equipo" />
        <label for="NombreEquipo">Nombre del Equipo</label>
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="EquipoInsertDto.Iglesia" class="form-control" id="IglesiaEquipo" placeholder="Iglesia" />
        <label for="IglesiaEquipo">Iglesia</label>
    </div>
    <div class="form-floating mb-3">
        <InputText @bind-Value="EquipoInsertDto.Zona" class="form-control" id="ZonaEquipo" placeholder="Zona" />
        <label for="ZonaEquipo">Zona</label>
    </div>
    <div class="form-floating mb-3">
        <InputFile OnChange="@OnInputFileChange" class="form-control" id="ZonaEquipo" placeholder="Logo" />
        <label for="ZonaEquipo">Logo</label>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-outline-info">Crear</button>
    </div>
</EditForm>



@code {
    [Parameter] 
    public int? IdEquipo { get; set; }

    [SupplyParameterFromForm]
    EquipoInsertarDTO EquipoInsertDto { get; set; } = new();
    EditContext? CntxtCrearEquipoForm;

    string? TituloText;
    string? EstatusMessage { get; set; }
    UploadResult? LogoSubir;
    InputFileChangeEventArgs? ArchivoListoParaSubir;

    private bool shouldRender;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CntxtCrearEquipoForm = new(EquipoInsertDto);
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (IdEquipo is not null)
        {
            TituloText = "Editar Equipo";
        }else
        {
            TituloText = "Crear Equipo";
        }       
    }

    protected override bool ShouldRender() => shouldRender;

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        ArchivoListoParaSubir = e;        
    }

    async Task SubirArchivoSeleccionado()
    {
        if (ArchivoListoParaSubir is not null)
        {
            shouldRender = false;
            long maxFileSize = 1024 * 1024 * 15;

            using var content = new MultipartFormDataContent();
            try
            {
                var fileContent = new StreamContent(ArchivoListoParaSubir.File.OpenReadStream(maxFileSize));
                fileContent.Headers.ContentType = new MediaTypeHeaderValue(ArchivoListoParaSubir.File.ContentType);

                content.Add(content: fileContent,
                            name: "\"logoArchivo\"",
                            fileName: ArchivoListoParaSubir.File.Name);

                if (Http.BaseAddress is null)
                {
                    Http.BaseAddress = new Uri(Navi.BaseUri);
                }

                var response = await Http.PostAsync("api/guardarlogo", content);
                if (response.IsSuccessStatusCode)
                {
                    var newUploadResults = await response.Content.ReadFromJsonAsync<UploadResult>();
                    if (newUploadResults is not null)
                    {
                        LogoSubir = newUploadResults;
                    }
                }
                shouldRender = true;
            }
            catch (Exception Ex)
            {
                LogoSubir = new()
                {
                    FileName = ArchivoListoParaSubir.File.Name,
                    ErrorCode = 5,
                    Uploaded = false
                };

                Logger.LogInformation("{FileName} not uploaded (Err: 5): {Message}", ArchivoListoParaSubir.File.Name, Ex.Message);
            }
        }
    }

    async Task AlCrearForm()
    {
        await SubirArchivoSeleccionado();
        if (LogoSubir is not null && LogoSubir.Uploaded)
        {
            EquipoInsertDto.Logo = LogoSubir.StoredFileName;
            //aqui guardo los datos si el archivo ha subido

        }else
        {
            //Aqui guardo sin el logo
        }
    }

}
